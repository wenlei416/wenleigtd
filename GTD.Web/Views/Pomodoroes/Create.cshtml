@model GTD.Models.Pomodoro

@{
    ViewBag.Title = "Create";
}
@*<link rel="stylesheet" type="text/css" href="~/Scripts/datetimepicker/jquery.datetimepicker.min.css">*@
@Styles.Render("~/Content/datetimepicker")

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pomodoro</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IsCompletedPomodoro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCompletedPomodoro)
                    @Html.ValidationMessageFor(model => model.IsCompletedPomodoro, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StarDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StarDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StarDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsWorkingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsWorkingTime)
                    @Html.ValidationMessageFor(model => model.IsWorkingTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskId, "TaskId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TaskId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    @*<script src="~/Scripts/datetimepicker/jquery.datetimepicker.full.js"></script>*@
    @Scripts.Render("~/bundles/datetimepicker")

    @*<script src="~/Scripts/moment.js"></script>*@
    @Scripts.Render("~/bundles/moment")


    <script>
        $(document)
            .ready(function () {
                $.datetimepicker.setLocale('zh');
                $('#@Html.IdFor(model => model.StarDateTime)').datetimepicker({ step: 1 });
                $('#@Html.IdFor(model => model.EnDateTime)').datetimepicker({ step: 1 });
                $('#@Html.IdFor(p => p.StarDateTime)')
                    .blur(function () {
                        if ($('#@Html.IdFor(p => p.EnDateTime)').val() === '') {
                            if ($('#@Html.IdFor(p => p.IsWorkingTime)').prop('checked')) {
                                //console.log(moment($('#@Html.IdFor(p => p.StarDateTime)').val(), "YYYY/MM/DD HH:mm").add(25, 'm').format('YYYY/MM/DD HH:mm'));
                                $('#@Html.IdFor(p => p.EnDateTime)')
                                    .val(moment($('#@Html.IdFor(p => p.StarDateTime)')
                                            .val(),
                                            "YYYY/MM/DD HH:mm")
                                        .add(25, 'm')
                                        .format('YYYY/MM/DD HH:mm'));
                            } else {
                                $('#@Html.IdFor(p => p.EnDateTime)')
                                    .val(moment($('#@Html.IdFor(p => p.StarDateTime)')
                                            .val(),
                                            "YYYY/MM/DD HH:mm")
                                        .add(5, 'm')
                                        .format('YYYY/MM/DD HH:mm'));

                            }
                        }
                    });
                $('#@Html.IdFor(p => p.EnDateTime)')
                    .blur(function () {
                        if ($('#@Html.IdFor(p => p.StarDateTime)').val() === '') {
                            if ($('#@Html.IdFor(p => p.IsWorkingTime)').prop('checked')) {
                                $('#@Html.IdFor(p => p.StarDateTime)')
                                    .val(moment($('#@Html.IdFor(p => p.EnDateTime)').val(), "YYYY/MM/DD HH:mm")
                                        .add(-25, 'm')
                                        .format('YYYY/MM/DD HH:mm'));
                            } else {
                                $('#@Html.IdFor(p => p.StarDateTime)')
                                    .val(moment($('#@Html.IdFor(p => p.EnDateTime)').val(), "YYYY/MM/DD HH:mm")
                                        .add(-5, 'm')
                                        .format('YYYY/MM/DD HH:mm'));
                            }
                        }
                    });
                $('#@Html.IdFor(p => p.IsWorkingTime)')
                    .change(function () {
                        if ($('#@Html.IdFor(p => p.StarDateTime)').val() !== '') {
                            if ($('#@Html.IdFor(p => p.IsWorkingTime)').prop('checked')) {
                                $('#@Html.IdFor(p => p.EnDateTime)')
                                    .val(moment($('#@Html.IdFor(p => p.StarDateTime)')
                                            .val(),
                                            "YYYY/MM/DD HH:mm")
                                        .add(25, 'm')
                                        .format('YYYY/MM/DD HH:mm'));
                            } else {
                                $('#@Html.IdFor(p => p.EnDateTime)')
                                    .val(moment($('#@Html.IdFor(p => p.StarDateTime)')
                                            .val(),
                                            "YYYY/MM/DD HH:mm")
                                        .add(5, 'm')
                                        .format('YYYY/MM/DD HH:mm'));
                            }

                        }


                    });

            });
    </script>
}
