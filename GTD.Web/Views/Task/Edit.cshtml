@using GTD.Models
@model GTD.Models.Task

@{
    ViewBag.Title = @Model.Headline;
}

<h2>编辑</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Task</legend>

        @Html.HiddenFor(model => model.TaskId)
        @*----------标题----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.Headline)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Headline)
            @Html.ValidationMessageFor(model => model.Headline)
        </div>

        @*----------描述----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        @*----------开始日期----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.StartDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDateTime)
            @Html.ValidationMessageFor(model => model.StartDateTime)
        </div>

        @*----------结束日期----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.CloseDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CloseDateTime)
            @Html.ValidationMessageFor(model => model.CloseDateTime)
        </div>

        @*----------属性----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.DateAttribute)
        </div>
        <div class="editor-field">
            @Html.DropDownList("DateAttribute", null, new { @class = "dropdownlist" })
            @Html.ValidationMessageFor(model => model.DateAttribute)
        </div>

        @*----------优先级----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Priority", null, new { @class = "dropdownlist" })
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        @*----------项目----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.Pro)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProjectID", null, "无", new { @class = "dropdownlist" })
            @Html.ValidationMessageFor(model => model.Pro)
        </div>

        @*----------情景----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.Context)
        </div>
        <div class="editor-field">

            @Html.DropDownList("ContextId", null, "无", new { @class = "dropdownlist" })
            @Html.ValidationMessageFor(model => model.Context)
        </div>

        @*----------后续任务----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.NextTask_TaskId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("NextTask_TaskId", null, string.Empty, new { @class = "dropdownlist" })
            @Html.ValidationMessageFor(model => model.NextTask_TaskId)
        </div>

        @*----------前置任务----------*@
        <div class="editor-label">
            @Html.LabelFor(model => model.PreviousTask_TaskId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("PreviousTask_TaskId", null, string.Empty, new { @class = "dropdownlist" })

            @Html.ValidationMessageFor(model => model.PreviousTask_TaskId)
        </div>

        <p>
            <input type="submit" value="保存" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("返回列表", "ListTask", "Task", new { da = DateAttribute.今日待办.ToString(), sortorder = "priority" }, "")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/moment")
    <script src="~/Scripts/CustomValidation.js"></script>
    @*<link rel="stylesheet" type="text/css" href="~/Scripts/datetimepicker/jquery.datetimepicker.min.css">
        <script src="~/Scripts/datetimepicker/jquery.datetimepicker.full.js"></script>*@
    <script>
        $(document)
            .ready(function () {
                function setDataAttribute(da) {
                    var datetime;
                    switch (da) {
                        case "今日待办":
                            datetime = moment().format('YYYY-MM-DD');
                            break;
                        case "明日待办":
                            datetime = moment().add(1, 'days').format('YYYY-MM-DD');
                            break;
                        case "日程":
                            datetime = moment().add(2, 'days').format('YYYY-MM-DD');
                            break;
                        case "下一步行动":
                        case "收集箱":
                        case "将来也许":
                        case "等待":
                            datetime = "";
                            break;
                        default:
                    }
                    $('#@Html.IdFor(model => model.StartDateTime)').val(datetime);
                    $('#@Html.IdFor(model => model.CloseDateTime)').val(datetime);

                };

                @*function setStartDateTime(date) {
                    $('#@Html.IdFor(model => model.DateAttribute)').val("今日待办");
                }*@

                //$('#@Html.IdFor(model => model.StartDateTime)').change(function () { setStartDateTime($(this).val()) });
                $('#@Html.IdFor(model => model.DateAttribute)').change(function () { setDataAttribute($(this).children('option:selected').val()) });


                @*$.datetimepicker.setLocale('zh');
                $('#@Html.IdFor(model => model.CloseDateTime)').datetimepicker({ timepicker: false, format: 'YYYY/mm/dd' });
                $('#@Html.IdFor(model=>model.StartDateTime)').datetimepicker();*@
            });
    </script>
}
