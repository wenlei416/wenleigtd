@using GTD.Models
@using GTD.Util
@model GTD.ViewModels.TaskDetailVM

@{
    ViewBag.Title = @Model.Task.Headline;
}

<div class="task-attr">
    <div class="pri @Model.Task.CssForPriority()"></div>
    <div>@(Model.Task.StartDateTime != null ? Model.Task.StartDateTime.Value.ToShortDateString() : "")</div>
    <div>@(Model.Task.CloseDateTime != null ? "~" : "")</div>
    <div>@(Model.Task.CloseDateTime != null ? Model.Task.CloseDateTime.Value.ToShortDateString() : "")</div>
    <div class="context">@(Model.Task.ContextID != null ? "@" + Model.Task.Context.ContextName : "")</div>
    <div class="project">@(Model.Task.Pro != null ? "#" + Model.Task.Pro.ProjectName : "")</div>
</div>
<h2 class="task-title">@Model.Task.Headline</h2>
<ul class="detail">
    <li class="task-note" style="white-space: pre-line">@Model.Task.Description</li>
    <li class="subtask">
        <div style="line-height: 20px;height: 20px;margin-bottom: 10px;font-size: 20px; font-weight: 600">未完成子任务</div>
        <ul>
            @foreach (var item in Model.InprogressSubTasks)
            {
                <li>
                    <div class="process">@Html.ActionLink("完成", "Complete", "SubTask", new { id = item.SubTaskId }, "")</div>
                    <div class="SubTaskTitle">@item.SubTaskName</div>
                </li>
            }
        </ul>
        <div style="line-height: 20px;height: 20px;margin-bottom: 10px;font-size: 20px; font-weight: 600">已完成子任务</div>
        <ul>
            @foreach (var item in Model.CompletedSubTasks)
            {
                <li>
                    <div class="process">@Html.ActionLink("恢复", "Complete", "SubTask", new { id = item.SubTaskId }, "")</div>
                    <div style="text-decoration:line-through" class="SubTaskTitle">@item.SubTaskName</div>
                </li>
            }
        </ul>
        <div class="add">预留增加子任务</div>
    </li>
    <li class="task-releation">
        <div>前置任务：@(Model.Task.PreviousTask_Headline() ?? "无")</div>
        <div>后续任务：@(Model.Task.NextTask_Headline() ?? "无")</div>
    </li>
    <li class="task-op">
        <div>@Html.ActionLink("完成", "Complete", "Task", new { id = Model.Task.TaskId }, "")</div>
        <div>@Html.ActionLink("编辑", "Edit", new { id = Model.Task.TaskId }) </div>
        <div>@Html.ActionLink("返回列表", "ListTask", "Task", new { da = Model.Task.DateAttribute.Value, sortorder = "priority" }, "")</div>
        <div>@Html.ActionLink("创建子任务", "Create", "SubTask", new { id = Model.Task.TaskId }, "")</div>
    </li>
    <li class="comments">
        <div style="line-height: 40px;height: 40px;font-size: 20px; font-weight: 600">备注</div>
        <ul class="comm">
            @foreach (var item in Model.Task.Comments)
            {
                <li>
                    <div><pre>@Html.Encode(@item.Description)</pre></div>
                </li>
            }
        </ul>
        <div>
            @{
                Html.RenderPartial("CommentCreatePartView", new Comment { TaskId = Model.Task.TaskId });
            }
        </div>
    </li>


    <li>
        <br />
    </li>
    <li class="pomodoroTime">
        <div class="progress" style="width: 566px;height: 25px;">
            <div id="bar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
            </div>
        </div>
        <button id="startWorkButton" class="btn btn-primary">开始工作</button>
        <button id="startRestButton" class="btn btn-warning">开始休息</button>
        <button id="stopButton" class="btn btn-danger">停止</button>
    </li>

</ul>

@section Scripts {
    <script src="~/Scripts/layer/layer.js" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            var
                workTime,
                timer,
                startTime,
                stopTime;

            var updateProgress = function () {
                var now = +new Date();
                var remainTime = Math.round((stopTime - now) / 1000);
                if (remainTime >= 0) {
                    var progress = remainTime / (workTime / 1000);
                    $('#bar').width(progress * 100 + "%");
                    if (remainTime === 0) {
                        clearTimeout(timer);
                        //alert("时间到");
                        layer.open({
                            type: 1,
                            title: false,
                            closeBtn: 0, //不显示关闭按钮
                            shade: [0],
                            area: ['340px', '215px'],
                            offset: 'rb', //右下角弹出
                            //time: 2000, //2秒后自动关闭
                            shift: 2,
                            shadeClose: true,
                            content: '时间到'//iframe的url，no代表不显示滚动条
                        });
                    }
                }
            }

            $('#startWorkButton').click(function () {
                $('#bar').removeClass("progress-bar-success").addClass("progress-bar-info");
                workTime = 25 * 60 * 1000;
                startTime = +new Date(); //new Date()获取当前时间，+运算符将值转换成毫秒
                stopTime = startTime + workTime;
                updateProgress();
                timer = setInterval(updateProgress, 1000);
            });

            $('#startRestButton').click(function () {
                $('#bar').removeClass("progress-bar-info").addClass("progress-bar-success");
                workTime = 5 * 1000;
                startTime = +new Date(); //new Date()获取当前时间，+运算符将值转换成毫秒
                stopTime = startTime + workTime;
                updateProgress();
                timer = setInterval(updateProgress, 1000);
            });

            $('#stopButton').click(function () {
                clearTimeout(timer);
            });

        });
    </script>
}




