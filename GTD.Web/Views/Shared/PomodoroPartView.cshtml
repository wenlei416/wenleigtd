@model GTD.Models.Pomodoro

@Html.HiddenFor(model => model.TaskId)

<div class="progress" style="width: 566px;height: 25px;">
    <div id="bar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
    </div>
</div>
<button id="startWorkButton" class="btn btn-primary">开始工作</button>
<button id="startRestButton" class="btn btn-warning">开始休息</button>
<button id="stopButton" class="btn btn-danger">停止</button>


<script src="~/Scripts/layer/layer.js" type="text/javascript"></script>
<script>
    $(document).ready(function () {
        var isTiming = false,
            taskId=@Model.TaskId,
            workTime,   // 番茄时长
            timer,      // 计时器
            isCompleted,// 是否正常完成
            isWorking,  // 工作or休息时间
            startTime,  // 开始计时的时间，格式是总秒数
            stopTime;   // 结束计时的时间，格式是总秒数
        $('#stopButton').attr("disabled", true);

        var updateProgress = function () {
            //获取当前时间，并转成毫秒
            var now = +new Date();
            var remainTime = Math.round((stopTime - now) / 1000);
            if (remainTime >= 0) {
                var progress = remainTime / (workTime / 1000);
                $('#bar').width(progress * 100 + "%");
                if (remainTime === 0) {
                    isTiming = false;
                    $('#startWorkButton').attr("disabled", false);
                    $('#startRestButton').attr("disabled", false);
                    $('#stopButton').attr("disabled", true);
                    isCompleted = true;

                    clearTimeout(timer);
                    //展示右下角的提示框
                    //todo 改成chrome的提示
                    layer.open({
                        type: 1,
                        title: false,
                        closeBtn: 0, //不显示关闭按钮
                        shade: [0],
                        area: ['340px', '215px'],
                        offset: 'rb', //右下角弹出
                        //time: 2000, //2秒后自动关闭
                        shift: 2,
                        shadeClose: true,
                        content: '时间到'//todo 这里可以进一步优化，显示的好看一点
                    });
                    $.ajax({
                        url: '@Url.Action("AddPomodoro", "Pomodoroes")',
                        data:
                           {
                               IsCompletedPomodoro: isCompleted,
                               StarDateTime: timeStamp2String(startTime),
                               EnDateTime: timeStamp2String(stopTime),
                               IsWorkingTime: isWorking,
                               TaskId: taskId
                           },
                        type: 'post',
                        cache: false,
                        async: true,
                        dataType: 'text',
                        success: function (data) {
                            console.log(data);
                            //这里需要把新增的pomodoro写到页面上
                        },
                        error: function () {
                            console.log("lost");
                        }
                    });
                }
            }
        }

        $('#startWorkButton').click(function () {
            if (!isTiming) {
                isTiming = true;
                isWorking = true;
                $('#startWorkButton').attr("disabled", true);
                $('#startRestButton').attr("disabled", true);
                $('#stopButton').attr("disabled", false);

                $('#bar').removeClass("progress-bar-success").addClass("progress-bar-info");
                workTime = 25 * 1000;//番茄时间定死为25分钟， 以后考虑变成配置
                startTime = +new Date(); //new Date()获取当前时间，+运算符将值转换成毫秒

                console.log(timeStamp2String(startTime));

                stopTime = startTime + workTime;
                updateProgress();
                timer = setInterval(updateProgress, 1000);
            }
        });

        $('#startRestButton').click(function () {
            if (!isTiming) {
                isTiming = true;
                isWorking = false;
                $('#startWorkButton').attr("disabled", true);
                $('#startRestButton').attr("disabled", true);
                $('#stopButton').attr("disabled", false);

                $('#bar').removeClass("progress-bar-info").addClass("progress-bar-success");
                workTime = 2 * 1000;//番茄休息时间定死为5分钟， 以后考虑变成配置
                startTime = +new Date(); //new Date()获取当前时间，+运算符将值转换成毫秒

                console.log(timeStamp2String(startTime));

                stopTime = startTime + workTime;
                updateProgress();
                timer = setInterval(updateProgress, 1000);//一秒钟判断一次
            }
        });

        $('#stopButton').click(function () {
            if (isTiming) {
                $('#startWorkButton').attr("disabled", false);
                $('#startRestButton').attr("disabled", false);
                $('#stopButton').attr("disabled", true);

                clearTimeout(timer);
                isTiming = false;
                stopTime = new Date();
                isCompleted = false;
                $.ajax({
                    url: '@Url.Action("AddPomodoro", "Pomodoroes")',
                    data:
                       { //PomodoroId:,
                           IsCompletedPomodoro: isCompleted,
                           StarDateTime: timeStamp2String(startTime),
                           EnDateTime: timeStamp2String(stopTime),
                           IsWorkingTime: isWorking,
                           TaskId: taskId
                       },
                    type: 'post',
                    cache: false,
                    async: true,
                    dataType: 'text',
                    success: function (data) {
                        console.log(data);
                        //这里需要把新增的pomodoro写到页面上
                    },
                    error: function () {
                        console.log("lost");
                    }
                });
            }
        });

        function timeStamp2String(time){
            var datetime = new Date(time);
            var year = datetime.getFullYear();
            var month = datetime.getMonth() + 1 < 10 ? "0" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;
            var date = datetime.getDate() < 10 ? "0" + datetime.getDate() : datetime.getDate();
            var hour = datetime.getHours()< 10 ? "0" + datetime.getHours() : datetime.getHours();
            var minute = datetime.getMinutes()< 10 ? "0" + datetime.getMinutes() : datetime.getMinutes();
            var second = datetime.getSeconds()< 10 ? "0" + datetime.getSeconds() : datetime.getSeconds();
            return year + "-" + month + "-" + date+" "+hour+":"+minute+":"+second;
        }
    });
</script>
